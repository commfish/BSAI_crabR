crab_data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
# add average weight
add_calc_wt(., stock = stock, units = units) %>%
get_avg_wt(., stock = stock, by = c("group", by), units = units) -> avg_wt
# get average weight of all years by fishery
avg_wt %>%
dplyr::select(-crab_year) %>%
mutate(fishery = substring(fishery, 1, 2)) %>%
rename(fish_type = fishery) %>%
group_by_at(1:(ncol(.) - 1)) %>%
summarise(avg_wt_mean = mean(avg_wt)) %>%
ungroup -> avg_wt_fish_type
# get observer cpue
pot_data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
group_by_at(c("crab_year", "fishery", by)) %>%
summarise(female = sum(female, na.rm = T),
sublegal_male = sum(sublegal, na.rm = T),
legal_male = sum(tot_legal, na.rm = T),
obs_effort = n()) %>% ungroup%>%
# pivot to long format
pivot_longer(c(female, sublegal_male, legal_male), names_to = "group", values_to = "count") %>%
# cpue
mutate(cpue = count / obs_effort) -> obs_cpue
# summarise fish ticket data
ft_data %>%
group_by_at(c("crab_year", "fishery", by)) %>%
summarise(effort = sum(effort, na.rm = T)) %>% ungroup -> ft_data
# get total catch
if(!is.null(by)) {
if(!(by %in% names(ft_data))){stop(paste0(by, " not present in fish ticket data"))}
}
# join to effort and avg wt
obs_cpue %>%
left_join(ft_data, by = c("crab_year", "fishery", by)) %>%
left_join(avg_wt, by = c("crab_year", "fishery", "group", by)) %>%
# fill in average weight when missing if available from another year
mutate(fish_type = substring(fishery, 1, 2)) %>%
left_join(avg_wt_fish_type, by = c("fish_type", "group", by)) %>%
mutate(avg_wt = ifelse(is.na(avg_wt), avg_wt_mean, avg_wt)) %>%
dplyr::select(-fish_type, -avg_wt_mean) %>%
# scale to total catch
mutate(total_catch_n = cpue * effort,
total_catch_wt = cpue * effort * avg_wt)  %>%
dplyr::select(crab_year, fishery, by, group, count, obs_effort, effort, cpue, avg_wt, total_catch_n, total_catch_wt) -> out
print(out, n = 1000)
crab_data %>%
filter(fishery == "TR18",
sex == 2)
crab_data %>%
filter(fishery == "TR18",
sex == 2) %>%
add_calc_wt()
crab_data %>%
filter(fishery == "TR18",
sex == 2) %>%
add_calc_wt(., stock = "BSSC")
crab_data %>%
filter(fishery == "TR18",
sex == 2) %>%
add_calc_wt(., stock = "BSSC") %>%
transmute(size, clutch, clac_wt)
crab_data %>%
filter(fishery == "TR18",
sex == 2) %>%
add_calc_wt(., stock = "BSSC") %>%
transmute(size, clutch, calc_wt)
#'
#' Add calculated weight based on weight at length parameters.
#' @param x crab data that includes fields 'size', 'sex', and 'clutch' and 'maturity' for chionoecetes stocks (if use_observer = T) and 'crab_year' (if use_historic = T).
#' @param stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC.
#' @param units NULL. Unit of measurement, "t" or "lb". Default = "t".
#' @return x with additional column 'calc_wt'
#' @examples add_calc_wt(data, stock = "BBRKC")
#'
#' @export
#'
add_calc_wt <- function(x, stock, units = "t") {
## errors ----
if(missing(stock)){stop("What stock ?!?")}
if(!(units %in% c("t", "lb"))){stop("Do not recognize the units, use t or lb")}
if(!("sex" %in% names(x))){stop("Cannot find sex !!")}
if(!("size" %in% names(x))){stop("Cannot find size !!")}
if(stock %in% c("BSSC", "WBT", "EBT") & !("clutch" %in% names(x))){stop("Cannot find size !!")}
if(stock %in% c("BSSC", "WBT", "EBT") & !("maturity" %in% names(x))){stop("Cannot find size !!")}
## add parameters ----
if(stock %in% c("BBRKC", "PIRKC", "WAIRKC", "EAG", "WAG", "AIGKC", "PIGKC", "SMBKC", "PIBKC")) {
x %>%
mutate(a = case_when(stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 1 ~ 0.000403,
stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 2 & size >= 90 ~ 0.003593,
stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 2 & size < 90 ~ 0.000408,
stock %in% c("EAG", "WAG", "AIGKC") & sex == 1 ~ 0.000271236,
stock %in% c("EAG", "WAG", "AIGKC") & sex == 2 ~ 0.001424,
stock %in% c("SMBKC", "PIBKC") & sex == 1 ~ 0.000502,
stock %in% c("SMBKC", "PIBKC") & sex == 2 ~ 0.02065)) %>%
mutate(b = case_when(stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 1 ~ 3.141334,
stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 2 & size >= 90 ~ 2.666076,
stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 2 & size < 90 ~ 3.127956,
stock %in% c("EAG", "WAG", "AIGKC") & sex == 1 ~ 3.167577,
stock %in% c("EAG", "WAG", "AIGKC") & sex == 2 ~ 2.781,
stock %in% c("SMBKC", "PIBKC") & sex == 1 ~ 3.107158,
stock %in% c("SMBKC", "PIBKC") & sex == 2 ~ 2.27)) -> x
}
if(stock %in% c("BSSC", "WBT", "EBT")) {
x %>%
mutate(a = case_when(stock == "BSSC" & sex == 1 ~ 0.000267,
stock == "BSSC" & sex == 2 & (maturity == 1 | clutch > 0) ~ 0.001158,
stock == "BSSC" & sex == 2 & (maturity == 0 | clutch <= 0 | is.na(clutch)) ~ 0.001047,
stock %in% c("WBT", "EBT") & sex == 1 ~ 0.00027,
stock %in% c("WBT", "EBT") & sex == 2 & (maturity == 1 | clutch > 0) ~ 0.000441,
stock %in% c("WBT", "EBT") & sex == 2 & (maturity == 0 | clutch <= 0 | is.na(clutch)) ~ 0.000562)) %>%
mutate(b = case_when(stock == "BSSC" & sex == 1 ~ 3.097253,
stock == "BSSC" & sex == 2 & (maturity == 1 | clutch > 0) ~ 2.708793,
stock == "BSSC" & sex == 2 & (maturity == 0 | clutch <= 0 | is.na(clutch)) ~ 2.708367,
stock %in% c("WBT", "EBT") & sex == 1 ~ 3.022134,
stock %in% c("WBT", "EBT") & sex == 2 & (maturity == 1 | clutch > 0) ~ 2.898686,
stock %in% c("WBT", "EBT") & sex == 2 & (maturity == 0 | clutch <= 0 | is.na(clutch)) ~ 2.816928)) -> x
}
## add calculated weight
x %>%
# calculated wt in grams
mutate(calc_wt = a * size^b,
calc_wt = case_when(units == "t" ~ calc_wt * 1e-6,
units == "lb" ~ calc_wt * 0.00220462)) %>%
dplyr::select(-a, -b) -> out
return(out)
}
by =
NULL
# make sure fishery and crab_year are not in by
by = by[!(by %in% c("fishery", "crab_year", "group"))]
if(length(by) == 0){by = NULL}
# get average wt
crab_data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
# add average weight
add_calc_wt(., stock = stock, units = units) %>%
get_avg_wt(., stock = stock, by = c("group", by), units = units) -> avg_wt
avg_wt
print(avg_wt, n = 1000)
#'
#' Add calculated weight based on weight at length parameters.
#' @param x crab data that includes fields 'size', 'sex', and 'clutch' and 'maturity' for chionoecetes stocks (if use_observer = T) and 'crab_year' (if use_historic = T).
#' @param stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC.
#' @param units NULL. Unit of measurement, "t" or "lb". Default = "t".
#' @return x with additional column 'calc_wt'
#' @examples add_calc_wt(data, stock = "BBRKC")
#'
#' @export
#'
add_calc_wt <- function(x, stock, units = "t") {
## errors ----
if(missing(stock)){stop("What stock ?!?")}
if(!(units %in% c("t", "lb"))){stop("Do not recognize the units, use t or lb")}
if(!("sex" %in% names(x))){stop("Cannot find sex !!")}
if(!("size" %in% names(x))){stop("Cannot find size !!")}
if(stock %in% c("BSSC", "WBT", "EBT") & !("clutch" %in% names(x))){stop("Cannot find size !!")}
if(stock %in% c("BSSC", "WBT", "EBT") & !("maturity" %in% names(x))){stop("Cannot find size !!")}
## add parameters ----
if(stock %in% c("BBRKC", "PIRKC", "WAIRKC", "EAG", "WAG", "AIGKC", "PIGKC", "SMBKC", "PIBKC")) {
x %>%
mutate(a = case_when(stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 1 ~ 0.000403,
stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 2 & size >= 90 ~ 0.003593,
stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 2 & size < 90 ~ 0.000408,
stock %in% c("EAG", "WAG", "AIGKC") & sex == 1 ~ 0.000271236,
stock %in% c("EAG", "WAG", "AIGKC") & sex == 2 ~ 0.001424,
stock %in% c("SMBKC", "PIBKC") & sex == 1 ~ 0.000502,
stock %in% c("SMBKC", "PIBKC") & sex == 2 ~ 0.02065)) %>%
mutate(b = case_when(stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 1 ~ 3.141334,
stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 2 & size >= 90 ~ 2.666076,
stock %in% c("BBRKC", "PIRKC", "WAIRKC") & sex == 2 & size < 90 ~ 3.127956,
stock %in% c("EAG", "WAG", "AIGKC") & sex == 1 ~ 3.167577,
stock %in% c("EAG", "WAG", "AIGKC") & sex == 2 ~ 2.781,
stock %in% c("SMBKC", "PIBKC") & sex == 1 ~ 3.107158,
stock %in% c("SMBKC", "PIBKC") & sex == 2 ~ 2.27)) -> x
}
if(stock %in% c("BSSC", "WBT", "EBT")) {
x %>%
mutate(a = case_when(stock == "BSSC" & sex == 1 ~ 0.000267,
stock == "BSSC" & sex == 2 & (maturity == 1 | clutch > 0) ~ 0.001158,
stock == "BSSC" & sex == 2 & (maturity == 0 | clutch <= 0 | is.na(clutch)) ~ 0.001047,
stock %in% c("WBT", "EBT") & sex == 1 ~ 0.00027,
stock %in% c("WBT", "EBT") & sex == 2 & (maturity == 1 | clutch > 0) ~ 0.000441,
stock %in% c("WBT", "EBT") & sex == 2 & (maturity == 0 | clutch <= 0 | is.na(clutch)) ~ 0.000562)) %>%
mutate(b = case_when(stock == "BSSC" & sex == 1 ~ 3.097253,
stock == "BSSC" & sex == 2 & (maturity == 1 | clutch > 0) ~ 2.708793,
stock == "BSSC" & sex == 2 & (maturity == 0 | clutch <= 0 | is.na(clutch)) ~ 2.708367,
stock %in% c("WBT", "EBT") & sex == 1 ~ 3.022134,
stock %in% c("WBT", "EBT") & sex == 2 & (maturity == 1 | clutch > 0) ~ 2.898686,
stock %in% c("WBT", "EBT") & sex == 2 & (maturity == 0 | clutch <= 0 | is.na(clutch)) ~ 2.816928)) -> x
}
## add calculated weight
x %>%
# calculated wt in grams
mutate(calc_wt = a * size^b,
calc_wt = case_when(units == "t" ~ calc_wt * 1e-6,
units == "lb" ~ calc_wt * 0.00220462)) %>%
dplyr::select(-a, -b) -> out
return(out)
}
#' @param data NULL. Crab sample data in the format as the output of `load_crab_dump()`
#' @param stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC.
#' @param by NULL. Vector of column names other than crab year, fishery, and size to use as a grouping variable.
#' @param lump T/F Lump shell condition into new and old (TRUE) or not (FALSE). Default = TRUE.
#' @param units NULL. Unit of measurement, "t" or "lb". Default = "t".
#' @return Data frame including crab year, fishery, grouping variables, and average weight.
#' @examples get_avg_wt(data, by = "group")
#'
#' @export
#'
get_avg_wt <- function(data, stock, by, lump = T, units = "t") {
# make sure fishery and crab_year are not in by
by = by[!(by %in% c("fishery", "crab_year"))]
data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
# add calc weight
add_calc_wt(., stock = stock, units = units) -> data
if("shell" %in% by & lump == T){
data %>%
filter(!is.na(shell),
shell != -9) %>%
mutate(shell = case_when(shell %in% c(0:2, 9) ~ "new",
shell %in% c(3:5) ~ "old")) -> data
}
if("shell" %in% by & lump == F){
data %>%
filter(!is.na(shell),
shell != -9)  -> data
}
if("legal" %in% by){
data %>%
filter(!is.na(legal),
legal != -9)  -> data
}
if("sex" %in% by){
data %>%
filter(sex %in% 1:2)  -> data
}
if("group" %in% by){
data %>%
filter(group %in% c("female", "legal_male", "sublegal_male"))  -> data
}
data[, c("crab_year", "fishery", by, "calc_wt")] %>%
group_by_at(1:(ncol(.) - 1)) %>%
summarise(avg_wt = mean(calc_wt, na.rm = T)) %>% ungroup -> out
return(out)
}
# get average wt
crab_data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
# add average weight
add_calc_wt(., stock = stock, units = units) %>%
get_avg_wt(., stock = stock, by = c("group", by), units = units) %>% print(n = 100)
# get average wt
crab_data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
# add average weight
add_calc_wt(., stock = stock, units = units) %>%
get_avg_wt(., stock = stock, by = c("group", by), units = units) %>% print(n = 1000)
# get average wt
crab_data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
# add average weight
add_calc_wt(., stock = stock, units = units) %>%
get_avg_wt(., stock = stock, by = c("group", by), units = units) -> avg_wt
# get average weight of all years by fishery
avg_wt %>%
dplyr::select(-crab_year) %>%
mutate(fishery = substring(fishery, 1, 2)) %>%
rename(fish_type = fishery) %>%
group_by_at(1:(ncol(.) - 1)) %>%
summarise(avg_wt_mean = mean(avg_wt)) %>%
ungroup -> avg_wt_fish_type
# get observer cpue
pot_data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
group_by_at(c("crab_year", "fishery", by)) %>%
summarise(female = sum(female, na.rm = T),
sublegal_male = sum(sublegal, na.rm = T),
legal_male = sum(tot_legal, na.rm = T),
obs_effort = n()) %>% ungroup%>%
# pivot to long format
pivot_longer(c(female, sublegal_male, legal_male), names_to = "group", values_to = "count") %>%
# cpue
mutate(cpue = count / obs_effort) -> obs_cpue
# summarise fish ticket data
ft_data %>%
group_by_at(c("crab_year", "fishery", by)) %>%
summarise(effort = sum(effort, na.rm = T)) %>% ungroup -> ft_data
# get total catch
if(!is.null(by)) {
if(!(by %in% names(ft_data))){stop(paste0(by, " not present in fish ticket data"))}
}
# join to effort and avg wt
obs_cpue %>%
left_join(ft_data, by = c("crab_year", "fishery", by)) %>%
left_join(avg_wt, by = c("crab_year", "fishery", "group", by)) %>%
# fill in average weight when missing if available from another year
mutate(fish_type = substring(fishery, 1, 2)) %>%
left_join(avg_wt_fish_type, by = c("fish_type", "group", by)) %>%
mutate(avg_wt = ifelse(is.na(avg_wt), avg_wt_mean, avg_wt)) %>%
dplyr::select(-fish_type, -avg_wt_mean) %>%
# scale to total catch
mutate(total_catch_n = cpue * effort,
total_catch_wt = cpue * effort * avg_wt)  %>%
dplyr::select(crab_year, fishery, by, group, count, obs_effort, effort, cpue, avg_wt, total_catch_n, total_catch_wt) -> out
print(out n = 1000)
print(out, n = 1000)
#' Load BSAI observer measure pot data and do data management routine
#' @param path NULL. Path to data file if not pulling directly from database.
#' @param stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC.
#' @param database_pull Default = FALSE. Do updated pull from database.
#' @param clean Default = TRUE. Do stock specific data cleaning.
#' @return Measure pot data time series by fishery.
#' @examples load_crab_dump("./data.csv", stock = "BBRKC")
#'
#' @export
#'
load_crab_dump <- function(path, stock, database_pull = F, clean = T) {
# load data
if(database_pull == T){stop("Database pull not set up yet")}
if(database_pull == F){
obs <- read_csv(path)
}
obs %>%
rename(sample_date = sampdate) %>%
# reorder
transmute(fishery, trip, adfg, sample_date, spn, statarea, latitude, longitude,
eastwest, depth, soaktime, gearcode = ifelse("gearcode" %in% names(.), gearcode, NA), ring, mesh, biotwine_ok, spcode, sex, size, legal, shell, clutch, eggdev,
clutchcon, maturity = ifelse("maturity" %in% names(.), maturity, NA), parasite) -> out
if(clean == T){
# stock specific
if(stock == "BBRKC"){
## fishery codes for early 90s tanner e166 fisheries
early_90s_tt <- c("EI91", "EI92", paste0("QT", 93:96))
## data mgmt specific to bbrkc
out %>%
mutate(fishery = gsub("XR|CR", "TR", fishery)) %>%
# filter EI and QT fisheries in early 90s by stat areas e166
filter(!(fishery %in% early_90s_tt & (statarea > 660000 | statarea < 0))) %>%
# combine all tanner e166 fishery codes
mutate(fishery = ifelse(fishery %in% early_90s_tt, gsub("EI|QT", "TT", fishery), fishery)) %>%
# fill in legal
add_legal(., stock = stock) %>%
# add regulatory group
mutate(group = case_when(sex == 2 ~ "female",
sex == 1 & legal == 0 ~ "sublegal_male",
sex == 1 & legal == 1 ~ "legal_male")) -> out
}
if(stock == "BSSC") {
## fishery codes for early 90s tanner e166 fisheries
early_90s_tt <- c("EI91", "EI92", paste0("QT", 93:96))
## data mgmt specific to bssc
out %>%
# fix transition to rationalization yr
mutate(fishery = gsub("QO05r", "QO05", fishery),
fishery = gsub("QO05o", "QO04", fishery),
# bbrkc test fish and cdq fisheries to TR
fishery = gsub("CO|EO", "QO", fishery),
# cdq rkc and bkc fisheries to PIBKC
fishery = gsub("CK", "QP", fishery),
# bbrkc test fish and cdq fisheries to TR
fishery = gsub("XR|CR", "TR", fishery),
fishery = ifelse((fishery %in% early_90s_tt) & (statarea > 660000 | statarea < 0), paste0("QT", substring(fishery, 3, 4)), fishery),
fishery = ifelse((fishery %in% early_90s_tt) & (statarea <= 660000 | statarea >= 0), paste0("TT", substring(fishery, 3, 4)), fishery)) %>%
# fill in legal
add_legal(., stock = stock) %>%
# add regulatory group
mutate(group = case_when(sex == 2 ~ "female",
sex == 1 & legal == 0 ~ "sublegal_male",
sex == 1 & legal == 1 ~ "legal_male")) -> out
}
if(stock %in% c("BSTC", "WBT", "EBT", "AIGKC", "EAG", "WAG", "PIGKC", "SMBKC", "PIBKC", "PIRKC", "WAIRKC")){
stop(paste0("No method for ", stock, " yet !!"))
}
# add crab year
out <- add_crab_year(out, date_correct = T)
}
return(out)
}
#' Load BSAI observer count pot data and do data management routine
#' @param path NULL. Path to data file if not pulling directly from database.
#' @param stock NULL. Character string stock abbreviation: BSSC, WBT, EBT, BBRKC, EAG, WAG, PIGKC, SMBKC, PIBKC, PIRKC, WAIRKC.
#' @param database_pull Default = FALSE. Do updated pull from database.
#' @param clean Default = TRUE. Do stock specific data cleaning.
#' @return Measure pot data time series by fishery.
#' @examples load_pot_dump("./data.csv", stock = "BBRKC")
#'
#' @export
#'
load_pot_dump <- function(path, stock, database_pull = F, clean = T) {
# load data
if(database_pull == T){stop("Database pull not set up yet")}
if(database_pull == F){
pot <- read_csv(path)
}
pot %>%
# fix biotwine status data
mutate(biotwine_ok = case_when(biotwine_ok == "-" ~ NA,
biotwine_ok %in% c("n", "N") ~ "N",
biotwine_ok %in% c("y", "Y") ~ "Y")) %>%
rename(sample_date = sampdate) %>%
# reorder
transmute(fishery, trip, adfg, sample_date, spn, statarea, latitude, longitude,
eastwest = ifelse("eastwest" %in% names(.), eastwest, NA), depth, soaktime, gearcode, ring, mesh, biotwine_ok, female, sublegal, tot_legal, msr_pot) -> out
if(clean == T){
# stock specific
if(stock == "BBRKC"){
## fishery codes for early 90s tanner e166 fisheries
early_90s_tt <- c("EI91", "EI92", paste0("QT", 93:96))
## data mgmt specific to bbrkc
out %>%
mutate(fishery = gsub("XR|CR", "TR", fishery)) %>%
# filter EI and QT fisheries in early 90s by stat areas e166
filter(!(fishery %in% early_90s_tt & (statarea > 660000 | statarea < 0))) %>%
# combine all tanner e166 fishery codes
mutate(fishery = ifelse(fishery %in% early_90s_tt, gsub("EI|QT", "TT", fishery), fishery)) -> out
}
if(stock == "BSSC") {
## fishery codes for early 90s tanner e166 fisheries
early_90s_tt <- c("EI91", "EI92", paste0("QT", 93:96))
## data mgmt specific to bssc
out %>%
# fix transition to rationalization yr
mutate(fishery = gsub("QO05r", "QO05", fishery),
fishery = gsub("QO05o", "QO04", fishery),
# bbrkc test fish and cdq fisheries to TR
fishery = gsub("CO|EO", "QO", fishery),
# cdq rkc and bkc fisheries to PIBKC
fishery = gsub("CK", "QP", fishery),
# bbrkc test fish and cdq fisheries to TR
fishery = gsub("XR|CR", "TR", fishery),
fishery = ifelse((fishery %in% early_90s_tt) & (statarea > 660000 | statarea < 0), paste0("QT", substring(fishery, 3, 4)), fishery),
fishery = ifelse((fishery %in% early_90s_tt) & (statarea <= 660000 | statarea >= 0), paste0("TT", substring(fishery, 3, 4)), fishery)) -> out
}
if(stock %in% c("BSTC", "WBT", "EBT", "AIGKC", "EAG", "WAG", "PIGKC", "SMBKC", "PIBKC", "PIRKC", "WAIRKC")){
stop(paste0("No method for ", stock, " yet !!"))
}
# add crab year
out <- add_crab_year(out, date_correct = T)
}
return(out)
}
crab_data <- load_crab_dump("../adfg_crab_observer/snow_crab/data/SNOWCRAB-1990-2023_crab_dump.csv", stock = "BSSC", clean = T)
pot_data <- load_pot_dump("../adfg_crab_observer/snow_crab/data/SNOWCRAB-1990-2023_potsum.csv", stock = "BSSC", clean = T)
crab_data %>%
count(fishery) %>% print(n = 1000)
pot_data %>%
count(fishery) %>% print(n = 1000)
if(!(units %in% c("t", "lb"))){stop("Do not recognize the units, use t or lb")}
# make sure fishery and crab_year are not in by
by = by[!(by %in% c("fishery", "crab_year", "group"))]
if(length(by) == 0){by = NULL}
# get average wt
crab_data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
# add average weight
add_calc_wt(., stock = stock, units = units) %>%
get_avg_wt(., stock = stock, by = c("group", by), units = units) -> avg_wt
# get average weight of all years by fishery
avg_wt %>%
dplyr::select(-crab_year) %>%
mutate(fishery = substring(fishery, 1, 2)) %>%
rename(fish_type = fishery) %>%
group_by_at(1:(ncol(.) - 1)) %>%
summarise(avg_wt_mean = mean(avg_wt)) %>%
ungroup -> avg_wt_fish_type
# get observer cpue
pot_data %>%
# remove known bad biotwine records
filter((biotwine_ok %in% c("Y", "-") | is.na(biotwine_ok))) %>%
group_by_at(c("crab_year", "fishery", by)) %>%
summarise(female = sum(female, na.rm = T),
sublegal_male = sum(sublegal, na.rm = T),
legal_male = sum(tot_legal, na.rm = T),
obs_effort = n()) %>% ungroup%>%
# pivot to long format
pivot_longer(c(female, sublegal_male, legal_male), names_to = "group", values_to = "count") %>%
# cpue
mutate(cpue = count / obs_effort) -> obs_cpue
# summarise fish ticket data
ft_data %>%
group_by_at(c("crab_year", "fishery", by)) %>%
summarise(effort = sum(effort, na.rm = T)) %>% ungroup -> ft_data
# get total catch
if(!is.null(by)) {
if(!(by %in% names(ft_data))){stop(paste0(by, " not present in fish ticket data"))}
}
# join to effort and avg wt
obs_cpue %>%
left_join(ft_data, by = c("crab_year", "fishery", by)) %>%
left_join(avg_wt, by = c("crab_year", "fishery", "group", by)) %>%
# fill in average weight when missing if available from another year
mutate(fish_type = substring(fishery, 1, 2)) %>%
left_join(avg_wt_fish_type, by = c("fish_type", "group", by)) %>%
mutate(avg_wt = ifelse(is.na(avg_wt), avg_wt_mean, avg_wt)) %>%
dplyr::select(-fish_type, -avg_wt_mean) %>%
# scale to total catch
mutate(total_catch_n = cpue * effort,
total_catch_wt = cpue * effort * avg_wt)  %>%
dplyr::select(crab_year, fishery, by, group, count, obs_effort, effort, cpue, avg_wt, total_catch_n, total_catch_wt) -> out
print(out, n = 1000)
